ARM GAS  C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB134:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE BEGIN PV */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/main.c **** void SystemClock_Config(void);
  49:Core/Src/main.c **** static void MX_GPIO_Init(void);
  50:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /**
  60:Core/Src/main.c ****   * @brief  The application entry point.
  61:Core/Src/main.c ****   * @retval int
  62:Core/Src/main.c ****   */
  63:Core/Src/main.c **** int main(void)
  64:Core/Src/main.c **** {
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c ****   /* USER CODE END 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  72:Core/Src/main.c ****   HAL_Init();
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Configure the system clock */
  79:Core/Src/main.c ****   SystemClock_Config();
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Initialize all configured peripherals */
  86:Core/Src/main.c ****   MX_GPIO_Init();
  87:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE END 2 */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Infinite loop */
  92:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  93:Core/Src/main.c ****   while (1)
  94:Core/Src/main.c ****   {
  95:Core/Src/main.c ****     /* USER CODE END WHILE */
  96:Core/Src/main.c ****        
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
  99:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14|GPIO_PIN_7, GPIO_PIN_SET);
 100:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_SET);
 101:Core/Src/main.c ****     HAL_Delay(500);
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14|GPIO_PIN_7, GPIO_PIN_RESET);
 104:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 105:Core/Src/main.c ****     HAL_Delay(500);
 106:Core/Src/main.c **** }
 107:Core/Src/main.c ****   /* USER CODE END 3 */
 108:Core/Src/main.c **** }
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /**
 111:Core/Src/main.c ****   * @brief System Clock Configuration
 112:Core/Src/main.c ****   * @retval None
 113:Core/Src/main.c ****   */
 114:Core/Src/main.c **** void SystemClock_Config(void)
 115:Core/Src/main.c **** {
 116:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 120:Core/Src/main.c ****   */
 121:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 122:Core/Src/main.c ****   {
 123:Core/Src/main.c ****     Error_Handler();
 124:Core/Src/main.c ****   }
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 127:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 128:Core/Src/main.c ****   */
 129:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 130:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 131:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 132:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 134:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 135:Core/Src/main.c ****   {
 136:Core/Src/main.c ****     Error_Handler();
 137:Core/Src/main.c ****   }
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 142:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 143:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s 			page 4


 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c ****     Error_Handler();
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c **** }
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** /**
 155:Core/Src/main.c ****   * @brief GPIO Initialization Function
 156:Core/Src/main.c ****   * @param None
 157:Core/Src/main.c ****   * @retval None
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c **** static void MX_GPIO_Init(void)
 160:Core/Src/main.c **** {
  28              		.loc 1 160 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 89B0     		sub	sp, sp, #36
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 56
 161:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 161 3 view .LVU1
  44              		.loc 1 161 20 is_stmt 0 view .LVU2
  45 0004 0024     		movs	r4, #0
  46 0006 0394     		str	r4, [sp, #12]
  47 0008 0494     		str	r4, [sp, #16]
  48 000a 0594     		str	r4, [sp, #20]
  49 000c 0694     		str	r4, [sp, #24]
  50 000e 0794     		str	r4, [sp, #28]
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 164:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  51              		.loc 1 164 3 is_stmt 1 view .LVU3
  52              	.LBB4:
  53              		.loc 1 164 3 view .LVU4
  54              		.loc 1 164 3 view .LVU5
  55 0010 1A4B     		ldr	r3, .L3
  56 0012 DA6C     		ldr	r2, [r3, #76]
  57 0014 42F00202 		orr	r2, r2, #2
  58 0018 DA64     		str	r2, [r3, #76]
  59              		.loc 1 164 3 view .LVU6
  60 001a DA6C     		ldr	r2, [r3, #76]
  61 001c 02F00202 		and	r2, r2, #2
  62 0020 0192     		str	r2, [sp, #4]
  63              		.loc 1 164 3 view .LVU7
  64 0022 019A     		ldr	r2, [sp, #4]
  65              	.LBE4:
ARM GAS  C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s 			page 5


  66              		.loc 1 164 3 view .LVU8
 165:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  67              		.loc 1 165 3 view .LVU9
  68              	.LBB5:
  69              		.loc 1 165 3 view .LVU10
  70              		.loc 1 165 3 view .LVU11
  71 0024 DA6C     		ldr	r2, [r3, #76]
  72 0026 42F00402 		orr	r2, r2, #4
  73 002a DA64     		str	r2, [r3, #76]
  74              		.loc 1 165 3 view .LVU12
  75 002c DB6C     		ldr	r3, [r3, #76]
  76 002e 03F00403 		and	r3, r3, #4
  77 0032 0293     		str	r3, [sp, #8]
  78              		.loc 1 165 3 view .LVU13
  79 0034 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 165 3 view .LVU14
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 168:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14|GPIO_PIN_7, GPIO_PIN_RESET);
  82              		.loc 1 168 3 view .LVU15
  83 0036 124F     		ldr	r7, .L3+4
  84 0038 2246     		mov	r2, r4
  85 003a 4FF48141 		mov	r1, #16512
  86 003e 3846     		mov	r0, r7
  87 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 171:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
  89              		.loc 1 171 3 view .LVU16
  90 0044 0F4D     		ldr	r5, .L3+8
  91 0046 2246     		mov	r2, r4
  92 0048 8021     		movs	r1, #128
  93 004a 2846     		mov	r0, r5
  94 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
  95              	.LVL1:
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /*Configure GPIO pins : PB14 PB7 */
 174:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_7;
  96              		.loc 1 174 3 view .LVU17
  97              		.loc 1 174 23 is_stmt 0 view .LVU18
  98 0050 4FF48143 		mov	r3, #16512
  99 0054 0393     		str	r3, [sp, #12]
 175:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 100              		.loc 1 175 3 is_stmt 1 view .LVU19
 101              		.loc 1 175 24 is_stmt 0 view .LVU20
 102 0056 0126     		movs	r6, #1
 103 0058 0496     		str	r6, [sp, #16]
 176:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 104              		.loc 1 176 3 is_stmt 1 view .LVU21
 105              		.loc 1 176 24 is_stmt 0 view .LVU22
 106 005a 0594     		str	r4, [sp, #20]
 177:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 107              		.loc 1 177 3 is_stmt 1 view .LVU23
 108              		.loc 1 177 25 is_stmt 0 view .LVU24
 109 005c 0694     		str	r4, [sp, #24]
ARM GAS  C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s 			page 6


 178:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 110              		.loc 1 178 3 is_stmt 1 view .LVU25
 111 005e 03A9     		add	r1, sp, #12
 112 0060 3846     		mov	r0, r7
 113 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 114              	.LVL2:
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /*Configure GPIO pin : PC7 */
 181:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_7;
 115              		.loc 1 181 3 view .LVU26
 116              		.loc 1 181 23 is_stmt 0 view .LVU27
 117 0066 8023     		movs	r3, #128
 118 0068 0393     		str	r3, [sp, #12]
 182:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 119              		.loc 1 182 3 is_stmt 1 view .LVU28
 120              		.loc 1 182 24 is_stmt 0 view .LVU29
 121 006a 0496     		str	r6, [sp, #16]
 183:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 122              		.loc 1 183 3 is_stmt 1 view .LVU30
 123              		.loc 1 183 24 is_stmt 0 view .LVU31
 124 006c 0594     		str	r4, [sp, #20]
 184:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 125              		.loc 1 184 3 is_stmt 1 view .LVU32
 126              		.loc 1 184 25 is_stmt 0 view .LVU33
 127 006e 0694     		str	r4, [sp, #24]
 185:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 128              		.loc 1 185 3 is_stmt 1 view .LVU34
 129 0070 03A9     		add	r1, sp, #12
 130 0072 2846     		mov	r0, r5
 131 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 132              	.LVL3:
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** }
 133              		.loc 1 187 1 is_stmt 0 view .LVU35
 134 0078 09B0     		add	sp, sp, #36
 135              	.LCFI2:
 136              		.cfi_def_cfa_offset 20
 137              		@ sp needed
 138 007a F0BD     		pop	{r4, r5, r6, r7, pc}
 139              	.L4:
 140              		.align	2
 141              	.L3:
 142 007c 00100240 		.word	1073876992
 143 0080 00040048 		.word	1207960576
 144 0084 00080048 		.word	1207961600
 145              		.cfi_endproc
 146              	.LFE134:
 148              		.section	.text.Error_Handler,"ax",%progbits
 149              		.align	1
 150              		.global	Error_Handler
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 155              	Error_Handler:
 156              	.LFB135:
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** /* USER CODE BEGIN 4 */
ARM GAS  C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s 			page 7


 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** /* USER CODE END 4 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** /**
 194:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 195:Core/Src/main.c ****   * @retval None
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c **** void Error_Handler(void)
 198:Core/Src/main.c **** {
 157              		.loc 1 198 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ Volatile: function does not return.
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 199:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 200:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 201:Core/Src/main.c ****   __disable_irq();
 163              		.loc 1 201 3 view .LVU37
 164              	.LBB6:
 165              	.LBI6:
 166              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
ARM GAS  C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s 			page 8


  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
ARM GAS  C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s 			page 9


  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
ARM GAS  C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s 			page 10


 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s 			page 11


 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 167              		.loc 2 207 27 view .LVU38
 168              	.LBB7:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 169              		.loc 2 209 3 view .LVU39
 170              		.syntax unified
 171              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 172 0000 72B6     		cpsid i
 173              	@ 0 "" 2
 174              		.thumb
 175              		.syntax unified
 176              	.L6:
 177              	.LBE7:
 178              	.LBE6:
 202:Core/Src/main.c ****   while (1)
 179              		.loc 1 202 3 discriminator 1 view .LVU40
 203:Core/Src/main.c ****   {
 204:Core/Src/main.c ****   }
 180              		.loc 1 204 3 discriminator 1 view .LVU41
 202:Core/Src/main.c ****   while (1)
 181              		.loc 1 202 9 discriminator 1 view .LVU42
 182 0002 FEE7     		b	.L6
 183              		.cfi_endproc
 184              	.LFE135:
 186              		.section	.text.SystemClock_Config,"ax",%progbits
 187              		.align	1
 188              		.global	SystemClock_Config
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 193              	SystemClock_Config:
 194              	.LFB133:
 115:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 195              		.loc 1 115 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 88
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199 0000 00B5     		push	{lr}
 200              	.LCFI3:
 201              		.cfi_def_cfa_offset 4
 202              		.cfi_offset 14, -4
 203 0002 97B0     		sub	sp, sp, #92
 204              	.LCFI4:
 205              		.cfi_def_cfa_offset 96
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 206              		.loc 1 116 3 view .LVU44
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 207              		.loc 1 116 22 is_stmt 0 view .LVU45
 208 0004 4422     		movs	r2, #68
 209 0006 0021     		movs	r1, #0
 210 0008 05A8     		add	r0, sp, #20
 211 000a FFF7FEFF 		bl	memset
 212              	.LVL4:
 117:Core/Src/main.c **** 
 213              		.loc 1 117 3 is_stmt 1 view .LVU46
 117:Core/Src/main.c **** 
ARM GAS  C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s 			page 12


 214              		.loc 1 117 22 is_stmt 0 view .LVU47
 215 000e 0023     		movs	r3, #0
 216 0010 0093     		str	r3, [sp]
 217 0012 0193     		str	r3, [sp, #4]
 218 0014 0293     		str	r3, [sp, #8]
 219 0016 0393     		str	r3, [sp, #12]
 220 0018 0493     		str	r3, [sp, #16]
 121:Core/Src/main.c ****   {
 221              		.loc 1 121 3 is_stmt 1 view .LVU48
 121:Core/Src/main.c ****   {
 222              		.loc 1 121 7 is_stmt 0 view .LVU49
 223 001a 4FF40070 		mov	r0, #512
 224 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 225              	.LVL5:
 121:Core/Src/main.c ****   {
 226              		.loc 1 121 6 view .LVU50
 227 0022 D0B9     		cbnz	r0, .L12
 129:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 228              		.loc 1 129 3 is_stmt 1 view .LVU51
 129:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 229              		.loc 1 129 36 is_stmt 0 view .LVU52
 230 0024 1023     		movs	r3, #16
 231 0026 0593     		str	r3, [sp, #20]
 130:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 232              		.loc 1 130 3 is_stmt 1 view .LVU53
 130:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 233              		.loc 1 130 30 is_stmt 0 view .LVU54
 234 0028 0123     		movs	r3, #1
 235 002a 0B93     		str	r3, [sp, #44]
 131:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 236              		.loc 1 131 3 is_stmt 1 view .LVU55
 131:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 237              		.loc 1 131 41 is_stmt 0 view .LVU56
 238 002c 0023     		movs	r3, #0
 239 002e 0C93     		str	r3, [sp, #48]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 240              		.loc 1 132 3 is_stmt 1 view .LVU57
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 241              		.loc 1 132 35 is_stmt 0 view .LVU58
 242 0030 6022     		movs	r2, #96
 243 0032 0D92     		str	r2, [sp, #52]
 133:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 244              		.loc 1 133 3 is_stmt 1 view .LVU59
 133:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 245              		.loc 1 133 34 is_stmt 0 view .LVU60
 246 0034 0F93     		str	r3, [sp, #60]
 134:Core/Src/main.c ****   {
 247              		.loc 1 134 3 is_stmt 1 view .LVU61
 134:Core/Src/main.c ****   {
 248              		.loc 1 134 7 is_stmt 0 view .LVU62
 249 0036 05A8     		add	r0, sp, #20
 250 0038 FFF7FEFF 		bl	HAL_RCC_OscConfig
 251              	.LVL6:
 134:Core/Src/main.c ****   {
 252              		.loc 1 134 6 view .LVU63
 253 003c 78B9     		cbnz	r0, .L13
 141:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s 			page 13


 254              		.loc 1 141 3 is_stmt 1 view .LVU64
 141:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 255              		.loc 1 141 31 is_stmt 0 view .LVU65
 256 003e 0F23     		movs	r3, #15
 257 0040 0093     		str	r3, [sp]
 143:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 258              		.loc 1 143 3 is_stmt 1 view .LVU66
 143:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 259              		.loc 1 143 34 is_stmt 0 view .LVU67
 260 0042 0021     		movs	r1, #0
 261 0044 0191     		str	r1, [sp, #4]
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 262              		.loc 1 144 3 is_stmt 1 view .LVU68
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 263              		.loc 1 144 35 is_stmt 0 view .LVU69
 264 0046 0291     		str	r1, [sp, #8]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 265              		.loc 1 145 3 is_stmt 1 view .LVU70
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 266              		.loc 1 145 36 is_stmt 0 view .LVU71
 267 0048 0391     		str	r1, [sp, #12]
 146:Core/Src/main.c **** 
 268              		.loc 1 146 3 is_stmt 1 view .LVU72
 146:Core/Src/main.c **** 
 269              		.loc 1 146 36 is_stmt 0 view .LVU73
 270 004a 0491     		str	r1, [sp, #16]
 148:Core/Src/main.c ****   {
 271              		.loc 1 148 3 is_stmt 1 view .LVU74
 148:Core/Src/main.c ****   {
 272              		.loc 1 148 7 is_stmt 0 view .LVU75
 273 004c 6846     		mov	r0, sp
 274 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 275              	.LVL7:
 148:Core/Src/main.c ****   {
 276              		.loc 1 148 6 view .LVU76
 277 0052 30B9     		cbnz	r0, .L14
 152:Core/Src/main.c **** 
 278              		.loc 1 152 1 view .LVU77
 279 0054 17B0     		add	sp, sp, #92
 280              	.LCFI5:
 281              		.cfi_remember_state
 282              		.cfi_def_cfa_offset 4
 283              		@ sp needed
 284 0056 5DF804FB 		ldr	pc, [sp], #4
 285              	.L12:
 286              	.LCFI6:
 287              		.cfi_restore_state
 123:Core/Src/main.c ****   }
 288              		.loc 1 123 5 is_stmt 1 view .LVU78
 289 005a FFF7FEFF 		bl	Error_Handler
 290              	.LVL8:
 291              	.L13:
 136:Core/Src/main.c ****   }
 292              		.loc 1 136 5 view .LVU79
 293 005e FFF7FEFF 		bl	Error_Handler
 294              	.LVL9:
 295              	.L14:
ARM GAS  C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s 			page 14


 150:Core/Src/main.c ****   }
 296              		.loc 1 150 5 view .LVU80
 297 0062 FFF7FEFF 		bl	Error_Handler
 298              	.LVL10:
 299              		.cfi_endproc
 300              	.LFE133:
 302              		.section	.text.main,"ax",%progbits
 303              		.align	1
 304              		.global	main
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 309              	main:
 310              	.LFB132:
  64:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 311              		.loc 1 64 1 view -0
 312              		.cfi_startproc
 313              		@ Volatile: function does not return.
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316 0000 08B5     		push	{r3, lr}
 317              	.LCFI7:
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 3, -8
 320              		.cfi_offset 14, -4
  72:Core/Src/main.c **** 
 321              		.loc 1 72 3 view .LVU82
 322 0002 FFF7FEFF 		bl	HAL_Init
 323              	.LVL11:
  79:Core/Src/main.c **** 
 324              		.loc 1 79 3 view .LVU83
 325 0006 FFF7FEFF 		bl	SystemClock_Config
 326              	.LVL12:
  86:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 327              		.loc 1 86 3 view .LVU84
 328 000a FFF7FEFF 		bl	MX_GPIO_Init
 329              	.LVL13:
 330              	.L16:
  93:Core/Src/main.c ****   {
 331              		.loc 1 93 3 discriminator 1 view .LVU85
  99:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_SET);
 332              		.loc 1 99 5 discriminator 1 view .LVU86
 333 000e 104D     		ldr	r5, .L18
 334 0010 0122     		movs	r2, #1
 335 0012 4FF48141 		mov	r1, #16512
 336 0016 2846     		mov	r0, r5
 337 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 338              	.LVL14:
 100:Core/Src/main.c ****     HAL_Delay(500);
 339              		.loc 1 100 5 discriminator 1 view .LVU87
 340 001c 0D4C     		ldr	r4, .L18+4
 341 001e 0122     		movs	r2, #1
 342 0020 8021     		movs	r1, #128
 343 0022 2046     		mov	r0, r4
 344 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 345              	.LVL15:
 101:Core/Src/main.c **** 
ARM GAS  C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s 			page 15


 346              		.loc 1 101 5 discriminator 1 view .LVU88
 347 0028 4FF4FA70 		mov	r0, #500
 348 002c FFF7FEFF 		bl	HAL_Delay
 349              	.LVL16:
 103:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 350              		.loc 1 103 5 discriminator 1 view .LVU89
 351 0030 0022     		movs	r2, #0
 352 0032 4FF48141 		mov	r1, #16512
 353 0036 2846     		mov	r0, r5
 354 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 355              	.LVL17:
 104:Core/Src/main.c ****     HAL_Delay(500);
 356              		.loc 1 104 5 discriminator 1 view .LVU90
 357 003c 0022     		movs	r2, #0
 358 003e 8021     		movs	r1, #128
 359 0040 2046     		mov	r0, r4
 360 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
 361              	.LVL18:
 105:Core/Src/main.c **** }
 362              		.loc 1 105 5 discriminator 1 view .LVU91
 363 0046 4FF4FA70 		mov	r0, #500
 364 004a FFF7FEFF 		bl	HAL_Delay
 365              	.LVL19:
  93:Core/Src/main.c ****   {
 366              		.loc 1 93 9 discriminator 1 view .LVU92
 367 004e DEE7     		b	.L16
 368              	.L19:
 369              		.align	2
 370              	.L18:
 371 0050 00040048 		.word	1207960576
 372 0054 00080048 		.word	1207961600
 373              		.cfi_endproc
 374              	.LFE132:
 376              		.text
 377              	.Letext0:
 378              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 379              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 380              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4r5xx.h"
 381              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 382              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 383              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 384              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 385              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 386              		.file 11 "<built-in>"
ARM GAS  C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s:20     .text.MX_GPIO_Init:00000000 $t
C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s:142    .text.MX_GPIO_Init:0000007c $d
C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s:149    .text.Error_Handler:00000000 $t
C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s:155    .text.Error_Handler:00000000 Error_Handler
C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s:187    .text.SystemClock_Config:00000000 $t
C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s:193    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s:303    .text.main:00000000 $t
C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s:309    .text.main:00000000 main
C:\Users\lalbo\AppData\Local\Temp\ccRXy8gv.s:371    .text.main:00000050 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
